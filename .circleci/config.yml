# to test any changes to job
# you can use
# circleci config process .circleci/config.yml > config_processed.yml
# followed by
# circleci local execute -c config_processed.yml --job chrome-stable-tests
version: 2.1
defaultEnv: &defaultEnv
  ENVIRONMENT: "prod"
executors:
  docker-chrome-stable:
    docker:
      - image: makarandp/twilio-video:chrome-stable
    environment:
      <<: *defaultEnv
  docker-firefox-stable:
    docker:
      - image: makarandp/twilio-video:firefox-stable
    environment:
      <<: *defaultEnv
  docker-chrome-beta:
    docker:
      - image: makarandp/twilio-video:chrome-beta
    environment:
      <<: *defaultEnv
  docker-firefox-beta:
    docker:
      - image: makarandp/twilio-video:firefox-beta
    environment:
      <<: *defaultEnv
  docker-chrome-unstable:
    docker:
      - image: makarandp/twilio-video:chrome-unstable
    environment:
      <<: *defaultEnv
  docker-firefox-unstable:
    docker:
      - image: makarandp/twilio-video:firefox-unstable
    environment:
      <<: *defaultEnv
  machine-executor:
    machine: true
    environment:
      BVER: "stable"
      <<: *defaultEnv

# TODO: https://stackoverflow.com/questions/8466223/reuse-a-block-of-code-in-yaml
# command are meant to be reused.
commands:
  get-code-and-dependancies:
    steps:
      - checkout
      - restore_cache: # special step to restore the dependency cache
          # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Installing dependancies
          command: npm install
      - save_cache: # special step to save the dependency cache
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
  save-test-results:
    steps:
      - store_test_results:
          path: ./logs
      - store_artifacts:
          path: ./logs
          prefix: tests
  build:
    steps:
      - get-code-and-dependancies
      - run:
          name: Building Quick
          command: npm run build:quick
  unit-tests:
    steps:
      - get-code-and-dependancies
      - run:
          name: Running Unit Tests
          command: npm run cover
      - store_artifacts:
          path: ./coverage
          prefix: coverage
  integration-tests:
    steps:
      - get-code-and-dependancies
      - run:
          name: Running Integration Tests
          command: scripts/circleci-run-tests.sh
      - save-test-results
  network-tests:
    steps:
      - checkout
      - run:
          name: Running Network Tests
          command: scripts/circleci-run-tests.sh
      - save-test-results
  framework-tests:
    steps:
      - build
      - run:
          name: Running UMD Tests
          command: npm run test:umd
      - run:
          name: Running Framework Tests
          command: npm run test:framework
      - save-test-results
  echo-command:
    description: "marker command"
    parameters:
      to:
        type: string
        default: "Hello World"
    steps:
      - run: echo << parameters.to >>
jobs:
  Build:
    executor: docker-chrome-stable
    steps:
      - build
  Unittest:
    executor: docker-chrome-stable
    steps:
      - unit-tests
  BuildComplete:
    executor: docker-chrome-stable
    steps:
      - echo-command:
          to: "Build Phase Complete!"
  Chrome-stable-group:
    environment:
      TOPOLOGY: "group"
    executor: docker-chrome-stable
    steps:
      - integration-tests
  Chrome-stable-p2p:
    environment:
      TOPOLOGY: "peer-to-peer"
    executor: docker-chrome-stable
    steps:
      - integration-tests
  Firefox-stable-group:
    environment:
      TOPOLOGY: "group"
    executor: docker-firefox-stable
    steps:
      - integration-tests
  Firefox-stable-p2p:
    environment:
      TOPOLOGY: "peer-to-peer"
    executor: docker-firefox-stable
    steps:
      - integration-tests
  Chrome-beta-group:
    environment:
      TOPOLOGY: "group"
    executor: docker-chrome-beta
    steps:
      - integration-tests
  Chrome-beta-p2p:
    environment:
      TOPOLOGY: "peer-to-peer"
    executor: docker-chrome-beta
    steps:
      - integration-tests
  Firefox-beta-group:
    environment:
      TOPOLOGY: "group"
    executor: docker-firefox-beta
    steps:
      - integration-tests
  Firefox-beta-p2p:
    environment:
      TOPOLOGY: "peer-to-peer"
    executor: docker-firefox-beta
    steps:
      - integration-tests
  Chrome-unstable-group:
    environment:
      TOPOLOGY: "group"
    executor: docker-chrome-unstable
    steps:
      - integration-tests
  Chrome-unstable-p2p:
    environment:
      TOPOLOGY: "peer-to-peer"
    executor: docker-chrome-unstable
    steps:
      - integration-tests
  Firefox-unstable-group:
    environment:
      TOPOLOGY: "group"
    executor: docker-firefox-unstable
    steps:
      - integration-tests
  Firefox-unstable-p2p:
    environment:
      TOPOLOGY: "peer-to-peer"
    executor: docker-firefox-unstable
    steps:
      - integration-tests
  Chrome-network-group:
    environment:
      NETWORK_TESTS: "true"
      BROWSER: "chrome"
      TOPOLOGY: "group"
    executor: machine-executor
    steps:
      - network-tests
  Chrome-network-p2p:
    environment:
      NETWORK_TESTS: "true"
      BROWSER: "chrome"
      TOPOLOGY: "peer-to-peer"
    executor: machine-executor
    steps:
      - network-tests
  FF-network-group:
    environment:
      NETWORK_TESTS: "true"
      BROWSER: "firefox"
      TOPOLOGY: "group"
    executor: machine-executor
    steps:
      - network-tests
  FF-network-p2p:
    environment:
      NETWORK_TESTS: "true"
      BROWSER: "firefox"
      TOPOLOGY: "peer-to-peer"
    executor: machine-executor
    steps:
      - network-tests
  Framework-tests-docker:
    environment:
      BROWSER: "chrome"
    executor: docker-chrome-stable
    steps:
      - framework-tests
  Framework-tests-machine:
    environment:
      BROWSER: "chrome"
    executor: machine-executor
    steps:
      - framework-tests
workflows:
 version: 2
 Pull_Request_Workflow:
   jobs:
     - Build
     - Unittest
     - BuildComplete:
        requires:
          - Build
          - Unittest
     - Chrome-stable-group:
        requires:
          - BuildComplete
     - Chrome-stable-p2p:
        requires:
          - BuildComplete
     - Firefox-stable-group:
        requires:
          - BuildComplete
     - Firefox-stable-p2p:
        requires:
          - BuildComplete
     - Chrome-unstable-group:
        requires:
          - BuildComplete
     - Chrome-unstable-p2p:
        requires:
          - BuildComplete
     - Firefox-unstable-group:
        requires:
          - BuildComplete
     - Firefox-unstable-p2p:
        requires:
          - BuildComplete
     - Chrome-beta-group:
        requires:
          - BuildComplete
     - Chrome-beta-p2p:
        requires:
          - BuildComplete
     - Firefox-beta-group:
        requires:
          - BuildComplete
     - Firefox-beta-p2p:
        requires:
          - BuildComplete
     - Chrome-network-group:
        requires:
          - BuildComplete
     - Chrome-network-p2p:
        requires:
          - BuildComplete
     - FF-network-group:
        requires:
          - BuildComplete
     - FF-network-p2p:
        requires:
          - BuildComplete
     - Framework-tests-docker:
        requires:
          - BuildComplete
     - Framework-tests-machine:
        requires:
          - BuildComplete
